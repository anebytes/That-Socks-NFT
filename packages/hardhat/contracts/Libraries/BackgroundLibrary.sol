pragma solidity ^0.8.0;
//SPDX-License-Identifier: MIT

import "hardhat/console.sol";
import "./BackgroundLibrary2.sol";

// GET LISTED ON OPENSEA: https://testnets.opensea.io/get-listed/step-two

// Defining Library
library BackgroundLibrary {
    function GetBackground(uint256 index) public pure returns (string memory) {
        string memory background;
        if (index == 1) {
            background = string(
                abi.encodePacked(
                    '    <rect width="1080" height="1080" fill="#DCDCDC"/><rect x="106" y="99" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="1008" y="99" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="408" y="99" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="-193" y="99" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="711" y="99" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="110" y="99" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="106" y="408" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="1008" y="408" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="408" y="408" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="-193" y="408" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="711" y="408" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="110" y="408" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="106" y="717" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="106" y="-211" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="-191" y="-211" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="1008" y="-211" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="1008" y="717" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="408" y="717" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="408" y="1020" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="408" y="-211" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="-193" y="717" width="264" height="263" rx="12" fill="#F5F5F5"/><rect x="711" y="717" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="711" y="1020" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="1013" y="1020" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="711" y="-211" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="110" y="717" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="110" y="1020" width="263" height="263" rx="12" fill="#F5F5F5"/><rect x="-192" y="1020" width="263" height="263" rx="12" fill="#F5F5F5"/>'
                )
            );
        } else if (index == 2) {
            background = string(
                abi.encodePacked(
                    '<rect width="1080" height="1080" fill="#818181"/><rect x="-24" y="90" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="-297" y="729" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="836" y="730" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="289" y="304" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="-848" y="304" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="-24" y="943" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><rect x="-21" y="517" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/><circle cx="250.5" cy="330.5" r="9.5" fill="#D6E4FF"/><circle cx="323.5" cy="330.5" r="9.5" fill="#D6E4FF"/><circle cx="863.5" cy="755.5" r="9.5" fill="#D6E4FF"/><circle cx="798.5" cy="755.5" r="9.5" fill="#D6E4FF"/><circle cx="1059.5" cy="115.5" r="9.5" fill="#D6E4FF"/><circle cx="250.5" cy="485.5" r="9.5" fill="#D6E4FF"/><circle cx="323.5" cy="485.5" r="9.5" fill="#D6E4FF"/><circle cx="863.5" cy="910.5" r="9.5" fill="#D6E4FF"/><circle cx="798.5" cy="910.5" r="9.5" fill="#D6E4FF"/><circle cx="1059.5" cy="270.5" r="9.5" fill="#D6E4FF"/><rect x="-13" y="-123" width="1128" height="205" fill="#818181" stroke="#DCDCDC" stroke-width="4"/>'
                )
            );
        } else if (index == 3) {
            background = string(
                abi.encodePacked(
                    '<rect width="1080" height="1080" fill="#FCDFB4"/><rect x="-24" y="90" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="-297" y="729" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="836" y="730" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="289" y="304" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="-848" y="304" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="-24" y="943" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><rect x="-21" y="517" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/><circle cx="250.5" cy="330.5" r="9.5" fill="#C5B093"/><circle cx="323.5" cy="330.5" r="9.5" fill="#C5B093"/><circle cx="863.5" cy="755.5" r="9.5" fill="#C5B093"/><circle cx="798.5" cy="755.5" r="9.5" fill="#C5B093"/><circle cx="1059.5" cy="115.5" r="9.5" fill="#C5B093"/><circle cx="250.5" cy="485.5" r="9.5" fill="#C5B093"/><circle cx="323.5" cy="485.5" r="9.5" fill="#C5B093"/><circle cx="863.5" cy="910.5" r="9.5" fill="#C5B093"/><circle cx="798.5" cy="910.5" r="9.5" fill="#C5B093"/><circle cx="1059.5" cy="270.5" r="9.5" fill="#C5B093"/><rect x="-24" y="-124" width="1128" height="205" fill="#FCDFB4" stroke="#D2B17F" stroke-width="4"/>'
                )
            );
        } else if (index == 4) {
            background = string(
                abi.encodePacked(
                    '<rect width="1080" height="1080" fill="#FDFFBC"/><path d="M186.609 589.4C-61.3912 543.8 -105.058 412.733 -95.8912 352.9V292.9C-95.8912 263.067 -63.7912 216.4 64.6088 268.4C193.009 320.4 199.442 504.067 186.609 589.4Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M187.5 588.5C159.5 515.167 64.2 360.2 -93 327" stroke="white" stroke-width="2"/><path d="M186.534 302.349C-64.9333 320.995 -140.347 205.245 -146.621 145.04L-161.805 86.9927C-169.355 58.1305 -150.11 4.85944 -12.7301 22.6727C124.65 40.4859 177.354 216.546 186.534 302.349Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M187.168 301.253C141.521 237.393 10.1058 111.588 -150.379 119.251" stroke="white" stroke-width="2"/><path d="M141.844 169.967C-80.0862 50.2567 -81.2972 -87.8873 -54.1615 -141.996L-35.6962 -199.084C-26.5149 -227.469 18.389 -261.992 124.554 -173C230.719 -84.0081 180.316 92.7244 141.844 169.967Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M142.969 169.384C138.897 90.9931 95.9135 -85.7814 -43.4395 -165.749" stroke="white" stroke-width="2"/><path d="M246.931 218.847C117.298 2.56306 186.828 -116.814 237.797 -149.467L282.834 -189.111C305.228 -208.822 361.467 -215.561 407.272 -84.8233C453.077 45.9147 319.463 172.098 246.931 218.847Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M248.195 218.921C284.74 149.45 338.094 -24.4754 259.148 -164.41" stroke="white" stroke-width="2"/><path d="M922.449 694.763C1162.87 770.798 1189.93 906.272 1173.4 964.504L1165.95 1024.04C1162.25 1053.64 1124.61 1095.96 1003.65 1028.43C882.703 960.888 899.121 777.843 922.449 694.763Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M921.453 695.545C940.132 771.787 1015.46 937.386 1167.32 989.845" stroke="white" stroke-width="2"/><path d="M776.379 872.048C1028.17 858.522 1101.22 975.781 1106.27 1036.1L1120.27 1094.45C1127.23 1123.46 1106.9 1176.32 969.913 1155.72C832.924 1135.12 783.811 958.021 776.379 872.048Z" fill="#A5F7C6" stroke="white" stroke-width="2"/><path d="M775.722 873.132C820.061 937.907 948.89 1066.36 1109.5 1061.96" stroke="white" stroke-width="2"/>'
                )
            );
        } else if (index == 5) {
            background = string(
                abi.encodePacked(
                    '<g clip-path="url(#clip0_87_270)"><rect width="1080" height="1080" fill="#FDFFBC"/><g filter="url(#filter0_d_87_270)"><path d="M355.5 396C251.9 596 74.6667 569.667 -1 531.5V-1H821.5C832.167 7.66667 840.8 52.6 790 163C726.5 301 485 146 355.5 396Z" fill="#98C1FF" fill-opacity="0.5"/><circle cx="891.5" cy="140.5" r="43.5" fill="#98C1FF" fill-opacity="0.5"/><circle cx="59.5" cy="607.5" r="21.5" fill="#98C1FF" fill-opacity="0.5"/><circle cx="956.5" cy="75.5" r="21.5" fill="#98C1FF" fill-opacity="0.5"/></g></g><defs><filter id="filter0_d_87_270" x="-5" y="-1" width="987" height="638" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="4"/><feGaussianBlur stdDeviation="2"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_87_270"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_87_270" result="shape"/></filter><clipPath id="clip0_87_270"><rect width="1080" height="1080" fill="white"/></clipPath></defs>'
                )
            );
        } else if (index == 6) {
            background = string(
                abi.encodePacked(
                    '<g clip-path="url(#clip0_87_279)"><rect width="1080" height="1080" fill="#FDFFBC"/><path d="M987.609 571.5C978.009 621.9 1058.11 647.5 1070.61 596H1080.11V0H480.109C467.309 30 497.109 43.5 513.609 46.5C479.209 103.7 527.943 122.333 556.609 124.5C531.009 166.9 558.943 185.167 576.109 189C563.309 230.6 594.443 237 611.609 235C600.009 303.4 655.443 325.5 684.609 328C680.209 390.8 738.443 404.5 768.109 403.5C785.709 463.9 832.443 458 853.609 447.5C834.409 500.3 877.943 521.5 902.109 525.5C917.709 585.9 965.609 581.333 987.609 571.5Z" fill="#FFD6F1"/><path d="M639.5 54.5C639.5 32 701.5 36 701.5 67C711.297 57.6667 734.613 46.6 749.5 77M902.109 235C904.24 219.667 917.9 194.4 955.5 216C966.5 199.5 994.9 176.4 1020.5 216M1070.61 596C1058.11 647.5 978.009 621.9 987.609 571.5C965.609 581.333 917.709 585.9 902.109 525.5C877.943 521.5 834.409 500.3 853.609 447.5C832.443 458 785.709 463.9 768.109 403.5C738.443 404.5 680.209 390.8 684.609 328C655.443 325.5 600.009 303.4 611.609 235C594.443 237 563.309 230.6 576.109 189C558.943 185.167 531.009 166.9 556.609 124.5C527.943 122.333 479.209 103.7 513.609 46.5C497.109 43.5 467.309 30 480.109 0H1080.11V596H1070.61Z" stroke="#FDA2F4" stroke-width="8"/></g><defs><clipPath id="clip0_87_279"><rect width="1080" height="1080" fill="white"/></clipPath></defs>'
                )
            );
        } else  if (index == 7) {
            background = string(
                abi.encodePacked(
                    '<rect width="1080" height="1080" fill="#FFD6F1"/><path fill-rule="evenodd" clip-rule="evenodd" d="M264.952 150.598C273.989 150.598 281.315 157.953 281.315 167.026C281.315 176.099 267.99 192.953 264.952 192.953C261.914 192.953 248.589 176.099 248.589 167.026C248.589 157.953 255.915 150.598 264.952 150.598ZM237.616 234.967C230.305 229.634 228.684 219.36 233.996 212.02C239.308 204.68 260.472 199.984 263.585 201.885C265.725 205.182 265.783 223.992 260.472 231.333C255.16 238.673 244.927 240.3 237.616 234.967ZM295.961 212.02C301.273 219.36 299.652 229.634 292.341 234.967C285.03 240.3 274.797 238.673 269.485 231.333C264.173 223.992 263.585 204.729 267.484 201.885C271.878 198.68 290.649 204.68 295.961 212.02ZM220.698 182.799C223.49 174.17 232.721 169.448 241.316 172.251C249.911 175.055 263.585 192.953 260.472 197.818C257.252 202.848 239.798 206.304 231.203 203.5C222.609 200.696 217.905 191.428 220.698 182.799ZM288.576 172.251C297.171 169.448 306.402 174.17 309.195 182.799C311.987 191.428 307.284 200.696 298.689 203.5C290.095 206.304 270.393 200.537 269.485 197.818C267.484 191.823 279.982 175.055 288.576 172.251Z" fill="white"/><circle cx="264.513" cy="197.818" r="16.8952" fill="#FDFFBC"/><path fill-rule="evenodd" clip-rule="evenodd" d="M222.76 973.958C215.558 979.417 205.277 977.98 199.797 970.749C194.316 963.518 194.755 942.038 197.176 940.203C199.597 938.368 220.397 943.751 225.877 950.981C231.358 958.212 229.963 968.499 222.76 973.958ZM193.583 890.207C202.631 890.041 210.128 897.25 210.329 906.309C210.53 915.367 196.5 931.893 192.869 932.259C189.173 930.924 177.764 915.968 177.563 906.91C177.363 897.851 184.535 890.373 193.583 890.207ZM160.946 943.738C152.279 941.097 147.364 931.93 149.97 923.264C152.575 914.597 161.713 909.713 170.38 912.354C179.047 914.996 191.152 929.993 189.762 934.614C188.197 939.822 169.613 946.38 160.946 943.738ZM238.578 921.564C241.565 930.127 237.06 939.467 228.517 942.424C219.974 945.381 198.265 939.378 197.808 933.62C197.335 927.666 209.158 914.369 217.701 911.412C226.244 908.455 235.591 913 238.578 921.564ZM190.853 970.971C185.697 978.397 175.488 980.21 168.05 975.02C160.612 969.829 158.762 959.602 163.918 952.176C169.074 944.75 188.258 937.445 190.625 939.064C195.84 942.633 196.009 963.545 190.853 970.971Z" fill="white"/><circle cx="194.587" cy="936.061" r="16.8952" transform="rotate(142.84 194.587 936.061)" fill="#FDFFBC"/><path fill-rule="evenodd" clip-rule="evenodd" d="M150.954 78.9999C164.784 78.9999 175.994 90.2557 175.994 104.14C175.994 118.025 155.603 143.816 150.954 143.816C146.305 143.816 125.914 118.025 125.914 104.14C125.914 90.2557 137.125 78.9999 150.954 78.9999ZM109.122 208.111C97.9338 199.95 95.4536 184.228 103.582 172.995C111.711 161.762 144.098 154.576 148.863 157.485C152.137 162.531 152.226 191.316 144.098 202.549C135.969 213.782 120.31 216.272 109.122 208.111ZM198.407 172.995C206.536 184.228 204.056 199.95 192.868 208.111C181.68 216.272 166.02 213.782 157.892 202.549C149.763 191.316 148.863 161.837 154.83 157.485C161.553 152.581 190.279 161.762 198.407 172.995ZM83.232 128.278C87.5055 115.073 101.632 107.846 114.784 112.137C127.937 116.427 148.863 143.816 144.098 151.261C139.171 158.959 112.461 164.247 99.3087 159.957C86.1563 155.666 78.9585 141.483 83.232 128.278ZM187.107 112.137C200.26 107.846 214.386 115.073 218.66 128.278C222.933 141.483 215.735 155.666 202.583 159.957C189.43 164.247 159.281 155.423 157.892 151.261C154.83 142.087 173.955 116.427 187.107 112.137Z" fill="white"/><circle cx="150.283" cy="151.261" r="25.8548" fill="#FDFFBC"/><path fill-rule="evenodd" clip-rule="evenodd" d="M943.953 924.744C932.932 933.097 917.198 930.899 908.811 919.833C900.424 908.768 901.097 875.897 904.802 873.089C908.506 870.281 940.336 878.517 948.723 889.583C957.11 900.648 954.974 916.39 943.953 924.744ZM899.303 796.58C913.149 796.326 924.622 807.357 924.929 821.22C925.237 835.082 903.766 860.372 898.211 860.932C892.554 858.888 875.095 836.001 874.788 822.139C874.481 808.277 885.457 796.834 899.303 796.58ZM849.358 878.498C836.095 874.456 828.574 860.428 832.561 847.166C836.548 833.904 850.532 826.429 863.795 830.471C877.058 834.514 895.582 857.463 893.456 864.536C891.06 872.505 862.621 882.541 849.358 878.498ZM968.158 844.564C972.729 857.669 965.836 871.962 952.763 876.487C939.689 881.012 906.468 871.826 905.768 863.014C905.045 853.902 923.137 833.554 936.211 829.029C949.284 824.504 963.587 831.459 968.158 844.564ZM895.125 920.173C887.234 931.537 871.611 934.311 860.229 926.369C848.847 918.426 846.016 902.775 853.906 891.411C861.796 880.047 891.154 868.868 894.775 871.346C902.757 876.807 903.015 908.809 895.125 920.173Z" fill="white"/><circle cx="900.839" cy="866.75" r="25.8548" transform="rotate(142.84 900.839 866.75)" fill="#FDFFBC"/>'
                )
            );
        } else if (index > 7) {
            background = BackgroundLibrary2.GetBackground(index);
        } 

        return background;
    }
}
